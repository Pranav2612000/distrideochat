{"version":3,"sources":["views/MessageList/index.js","containers/DefaultLayout/DefaultAside.js","views/Compose/index.js","views/Toolbar/index.js","views/ToolbarButton/index.js","views/Message/index.js","views/Connection/Controls.js","views/Widgets/MemberList.js"],"names":["socket","socketIOClient","global","config","backendURL","MessageList","props","init","getReqData","messages","state","roomName","lastMsgId","length","id","fetchMessages","data","undefined","console","log","msg","push","setState","renderMessages","i","messageCount","tempMessages","previous","current","next","isMine","sender","MY_USER_ID","currentMoment","moment","timestamp","startsSequence","endsSequence","showTimestamp","previousMoment","previousDuration","duration","diff","author","as","nextMoment","nextDuration","key","updateMsg","msgObject","newMsgs","newFormattedMsg","formatMsgs","concat","username","msgs","change","this","on","prevProps","window","scrollTo","document","querySelector","scrollHeight","tempMsg","update","formattedMsgs","forEach","val","index","formattedMsg","Date","getTime","className","title","rightItems","icon","callback","Component","connect","loginReducer","DefaultAside","changeRoomType","roomType","store","addNotification","message","type","container","animationIn","animationOut","dismiss","pauseOnHover","locationString","room","lastslash","lastIndexOf","slice","getRoomFromLocation","location","pathname","toggle","bind","activeTab","path","getRoomInfo","tab","children","Fragment","tabs","classNames","active","onClick","tabId","users","guests","class","variant","label","color","defaultChecked","size","withRouter","Compose","useState","setMsg","sendMessage","a","reqData","axios","post","headers","localStorage","getItem","then","res","catch","err","placeholder","value","onKeyDown","e","keyCode","onChange","target","style","styleSheet","inputStyles","borderRadius","backgroundColor","marginRight","borderWidth","borderColor","composeStyles","border","position","bottom","margin","padding","buttonStyles","Toolbar","leftItems","ToolbarButton","Message","friendlyTimestamp","format","join","Controls","createNotif","switchContext","context","getElementById","srcObject","nextElementSibling","innerText","display","poster","play","$","removeClass","addClass","myIds","myPeers","remotePeers","Set","remotePeersID","calls","Array","connectedPeers","friendtkn","myUsername","startScreenShare","startConnection","sendCallEndedSignal","endCall","Peer","host","port","iceServers","urls","url","credential","self","peer","isVideo","destroy","deleteAllVideoElements","peers","myIDs","createPeer","tkn","onlineArray","online","changePeer","disconnected","connections","reconnect","setUpConnections","updateSelfPeerInfo","getMyMediaStream","media","waitForConnections","navigator","mediaDevices","getDisplayMedia","video","width","height","audio","myMediaStreamObj","createVideoElement","getUserMedia","mediaa","sendMediaStream","call","isAnswer","metadata","track","getTracks","thiscall","addEventListener","close","deleteVideoElement","answer","addHandlersToCall","stream","duplicateCall","createStream","onremovetrack","evt","wrapper","createElement","nameTag","classList","add","muted","autoplay","onclick","appendChild","remove","hasClass","clearContext","empty","idToBeDestroyed","sendRequestToEndCall","stop","removeTrack","action","element","disabled","MemberList","loading","newmember","modal","addMember","handleNewMemberChange","shareLink","link","href","share","error","clipboard","writeText","status","cursor","flush","map","user","Math","random","isOpen","addonType","autoComplete","placement"],"mappings":"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","file":"static/js/13.3771fad2.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport Compose from '../Compose';\nimport Toolbar from '../Toolbar';\nimport ToolbarButton from '../ToolbarButton';\nimport Message from '../Message';\nimport moment from 'moment';\nimport axios from 'axios';\nimport socketIOClient from 'socket.io-client';\nimport { connect } from 'react-redux';\nimport './MessageList.css';\nimport { Col } from 'reactstrap';\n\nconst socket = socketIOClient(`${global.config.backendURL}/`);\n\nclass MessageList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      MY_USER_ID: this.props.username,\n      messages: this.props.msgs,\n      change: false,\n      lastMsgId: 0\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      messages: this.props.msgs\n    });\n    socket.on('newMessage', (data) => {\n      console.log('New Message Arrived', data, this.state.MY_USER_ID);\n\n      if (\n        this.props.roomName !== 'dashboard' &&\n        this.props.roomName == data['room'] &&\n        this.state.messages !== undefined &&\n        this.state.MY_USER_ID !== data['sender']\n      )\n        this.fetchMessages(true, data);\n\n      //console.log('Data and Message list : ', messages, data);\n      // if (props.roomName !== \"dashboard\") fetchMessages();\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    window.scrollTo(0, document.querySelector('#message-list').scrollHeight);\n    if (prevProps.roomName !== this.props.roomName) {\n      this.setState({\n        messages: this.props.msgs\n      });\n      this.init();\n    }\n  }\n\n  formatMsgs(tempMsg, update = false) {\n    let formattedMsgs = this.state.messages;\n    if (update) formattedMsgs = [];\n    tempMsg.forEach((val, index) => {\n      let formattedMsg = {};\n      formattedMsg.id = val.id;\n      formattedMsg.sender = val.sender;\n      formattedMsg.msg = val.msg;\n      formattedMsg.timestamp = new Date().getTime();\n      formattedMsgs.push(formattedMsg);\n    });\n    return formattedMsgs;\n  }\n\n  init = () => {\n    // axios\n    //   .get('http://localhost:5000/api/user/getUserName', {\n    //     headers: {\n    //       'milaap-auth-token': localStorage.getItem('milaap-auth-token')\n    //     }\n    //   })\n    //   .then((resp) => {\n    //     this.setState({\n    //       MY_USER_ID: resp.data.username\n    //     });\n    //   })\n    //   .catch((err) => {\n    //     console.log(err, 'Error in Verifying JWT');\n    //   });\n  };\n\n  getReqData = () => {\n    // console.clear()\n    let messages = this.state.messages;\n    return {\n      roomName: this.props.roomName,\n      lastMsgId:\n        messages && messages.length > 0 ? messages[messages.length - 1].id + 1 : -1\n    };\n  };\n\n  fetchMessages = (change = false, data) => {\n    let messages = this.state.messages;\n    delete data['room'];\n    if (\n      messages !== undefined &&\n      messages !== null &&\n      data !== undefined &&\n      data !== null\n    ) {\n      console.log('Inside');\n      var msg = messages;\n      msg.push(data);\n      this.setState({\n        messages: msg\n      });\n    }\n    console.log('Inside fetch Message', this.state.messages, data);\n    return;\n  };\n\n  renderMessages = () => {\n    // console.clear()\n    let messages = this.state.messages;\n    if (!messages) {\n      console.log('no messages');\n      return;\n    }\n    console.log(messages);\n    console.log(messages.length);\n    let i = 0;\n    const messageCount = messages.length;\n    const tempMessages = [];\n    while (i < messageCount) {\n      const previous = messages[i - 1];\n      const current = messages[i];\n      const next = messages[i + 1];\n      const isMine = current.sender === this.state.MY_USER_ID;\n      const currentMoment = moment(current.timestamp);\n      let prevBySameAuthor = false;\n      let nextBySameAuthor = false;\n      let startsSequence = true;\n      let endsSequence = true;\n      let showTimestamp = true;\n\n      if (previous) {\n        const previousMoment = moment(previous.timestamp);\n        const previousDuration = moment.duration(currentMoment.diff(previousMoment));\n        prevBySameAuthor = previous.author === current.author;\n\n        if (prevBySameAuthor && previousDuration.as('hours') < 1) {\n          startsSequence = false;\n        }\n\n        if (previousDuration.as('hours') < 1) {\n          showTimestamp = false;\n        }\n      }\n\n      if (next) {\n        const nextMoment = moment(next.timestamp);\n        const nextDuration = moment.duration(nextMoment.diff(currentMoment));\n        nextBySameAuthor = next.author === current.author;\n\n        if (nextBySameAuthor && nextDuration.as('hours') < 1) {\n          endsSequence = false;\n        }\n      }\n      if (messageCount == 1) endsSequence = false;\n      tempMessages.push(\n        <Message\n          key={i}\n          isMine={isMine}\n          startsSequence={startsSequence}\n          endsSequence={endsSequence}\n          showTimestamp={showTimestamp}\n          data={current}\n        />\n      );\n\n      // Proceed to the next message.\n      i += 1;\n\n      // console.log(current);\n    }\n    console.log(tempMessages);\n    return tempMessages;\n  };\n\n  updateMsg = (msgObject) => {\n    let newMsgs = [msgObject];\n    let newFormattedMsg = this.formatMsgs(newMsgs, true);\n    newMsgs = this.state.messages.concat(newFormattedMsg);\n    this.setState({\n      messages: newMsgs\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"message-list bg-dark\">\n        <Toolbar\n          title={this.props.roomName}\n          /*\n      rightItems={[\n        <ToolbarButton key=\"info\" icon=\"ion-ios-information-circle-outline\" />,\n        <ToolbarButton key=\"video\" icon=\"ion-ios-videocam\" />,\n        <ToolbarButton key=\"phone\" icon=\"ion-ios-call\" />\n      ]}\n             */\n        />\n\n        <div className=\"message-list-container bg-dark\" id=\"message-list\">\n          {this.renderMessages()}\n        </div>\n\n        <Compose\n          rightItems={[\n            <ToolbarButton key=\"photo\" icon=\"ion-ios-camera\" />,\n            <ToolbarButton key=\"image\" icon=\"ion-ios-image\" />,\n            <ToolbarButton key=\"audio\" icon=\"ion-ios-mic\" />,\n            <ToolbarButton key=\"money\" icon=\"ion-ios-card\" />,\n            <ToolbarButton key=\"games\" icon=\"ion-logo-game-controller-b\" />,\n            <ToolbarButton key=\"emoji\" icon=\"ion-ios-happy\" />\n          ]}\n          roomName={this.props.roomName}\n          callback={this.updateMsg}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  console.log(state);\n  return {\n    username: state.loginReducer.username\n  };\n};\n\nexport default connect(mapStateToProps)(MessageList);\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport ReactNotification, { store } from 'react-notifications-component';\n\nimport {\n  Nav,\n  NavItem,\n  NavLink,\n  Progress,\n  TabContent,\n  TabPane,\n  ListGroup,\n  ListGroupItem\n} from 'reactstrap';\nimport './DefaultLayout.css';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { AppSwitch } from '@coreui/react';\nimport MessageView from '../../views/MessageList/index';\nimport Controls from '../../views/Connection/Controls';\nimport MemberList from '../../views/Widgets/MemberList';\nimport axios from 'axios';\nimport {\n  Button,\n  ButtonGroup,\n  Badge,\n  Card,\n  CardBody,\n  CardFooter,\n  CardHeader,\n  Col,\n  Container,\n  Row,\n  Collapse,\n  Fade,\n  Spinner\n} from 'reactstrap';\n\nfunction getRoomFromLocation(locationString) {\n  let room = '';\n  const lastslash = locationString.lastIndexOf('/');\n  room = locationString.slice(lastslash + 1);\n  console.log(room);\n  return room;\n}\n\nclass DefaultAside extends Component {\n  constructor(props) {\n    super(props);\n    console.log(props);\n\n    let roomName = getRoomFromLocation(this.props.location.pathname);\n    this.toggle = this.toggle.bind(this);\n    this.state = {\n      activeTab: '1',\n      change: false,\n      roomName: roomName,\n      roomType: 'Public',\n      path: props.location.pathname\n    };\n    this.getRoomInfo = this.getRoomInfo.bind(this);\n  }\n\n  changeRoomType = () => {\n    this.setState({\n      roomType: this.state.roomType === 'Public' ? 'Private' : 'Public'\n    });\n    store.addNotification({\n      title: `Room Type Changed`,\n      message: `Changed room type to ${this.state.roomType}`,\n      type: 'success',\n      // insert: \"top\",\n      container: 'top-right',\n      animationIn: ['animated', 'fadeIn'],\n      animationOut: ['animated', 'fadeOut'],\n      dismiss: {\n        duration: 3000,\n        pauseOnHover: true\n      }\n    });\n  };\n\n  getRoomInfo(roomName) {\n    console.log('nothing to say.');\n    return;\n  }\n\n  componentDidMount() {\n    console.log('mounting');\n  }\n\n  toggle(tab) {\n    if (this.state.activeTab !== tab) {\n      this.setState({\n        activeTab: tab\n      });\n    }\n  }\n\n  render() {\n    // eslint-disable-next-line\n    console.log(this.props);\n    const { children, ...attributes } = this.props;\n\n    return (\n      <React.Fragment>\n        <Nav tabs>\n          <NavItem>\n            <NavLink\n              className={classNames({ active: this.state.activeTab === '1' })}\n              onClick={() => {\n                this.toggle('1');\n              }}>\n              <i className=\"icon-list\"></i>\n            </NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink\n              className={classNames({ active: this.state.activeTab === '2' })}\n              onClick={() => {\n                this.toggle('2');\n              }}>\n              <i className=\"icon-speech\"></i>\n            </NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink\n              className={classNames({ active: this.state.activeTab === '3' })}\n              onClick={() => {\n                this.toggle('3');\n              }}>\n              <i className=\"icon-settings\"></i>\n            </NavLink>\n          </NavItem>\n        </Nav>\n        <TabContent activeTab={this.state.activeTab}>\n          <TabPane tabId=\"1\">\n            <Container className=\"bg-dark\">\n              <Row>\n                <Controls roomName={this.props.roomName} />\n                <MemberList\n                  users={this.props.users}\n                  guests={this.props.guests}\n                  roomName={this.props.roomName}\n                />\n              </Row>\n            </Container>\n          </TabPane>\n          <TabPane tabId=\"2\" className=\"p-3 bg-dark\" key={this.state.change}>\n            <MessageView roomName={this.props.roomName} msgs={this.props.msgs} />\n          </TabPane>\n\n          <TabPane tabId=\"3\" className=\"p-3 bg-dark\">\n            <h6>Settings</h6>\n\n            <div className=\"aside-options\">\n              <div className=\"clearfix mt-4\">\n                <small>\n                  <button class=\"btn btn-dark\">Change Room Icon</button>\n                </small>\n              </div>\n              <div>\n                <small className=\"text-muted\">Set the Room Icon.</small>\n              </div>\n            </div>\n\n            <div className=\"aside-options\">\n              <div className=\"clearfix mt-3\">\n                <small>\n                  <button class=\"btn btn-dark\" onClick={this.changeRoomType}>\n                    Change Room Type\n                  </button>\n                </small>\n              </div>\n              <div>\n                <small className=\"text-muted\">\n                  Set the active room to Private / Public.\n                </small>\n              </div>\n            </div>\n\n            <div className=\"aside-options\">\n              <div className=\"clearfix mt-3\">\n                <small>\n                  <b>More settings</b>\n                </small>\n                <AppSwitch\n                  className={'float-right'}\n                  variant={'pill'}\n                  label\n                  color={'success'}\n                  defaultChecked\n                  size={'sm'}\n                />\n              </div>\n            </div>\n          </TabPane>\n        </TabContent>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withRouter(DefaultAside);\n","import React, { useState } from 'react';\nimport './Compose.css';\nimport axios from 'axios';\n\nexport default function Compose(props) {\n  const [msg, setMsg] = useState('');\n  async function sendMessage() {\n    if (msg === '') return;\n    const reqData = {\n      msg: msg,\n      roomName: props.roomName\n    };\n    axios\n      .post(`${global.config.backendURL}/api/room/sendmessage`, reqData, {\n        headers: {\n          'milaap-auth-token': localStorage.getItem('milaap-auth-token')\n        }\n      })\n      .then((res) => {\n        console.log(res);\n        // window.location.reload();\n        props.callback(res.data.msg);\n        setMsg('');\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n  return (\n    <div className=\"compose bg-dark\">\n      <textarea\n        type=\"text\"\n        className=\"md-textarea form-control\"\n        placeholder=\"Type a message, @name\"\n        value={msg}\n        onKeyDown={(e) => {\n          if (e.keyCode === 13) sendMessage();\n        }}\n        onChange={(e) => {\n          setMsg(e.target.value);\n        }}\n        style={styleSheet.inputStyles}\n      />\n      <button className=\"compose-button\" onClick={sendMessage}>\n        <span className=\"icon cui-chevron-right\"></span>\n      </button>\n\n      {props.rightItems}\n    </div>\n  );\n}\n\nconst styleSheet = {\n  inputStyles: {\n    borderRadius: '50px',\n    backgroundColor: 'white',\n    marginRight: '5px',\n    borderWidth: '2.5px',\n    borderColor: 'black'\n  },\n  composeStyles: {\n    backgroundColor: 'transparent',\n    border: 0,\n    position: 'fixed',\n    bottom: '5',\n    margin: 0,\n    padding: 0\n  },\n  buttonStyles: {\n    backgroundColor: 'black'\n  }\n};\n","import React from 'react';\nimport './Toolbar.css';\n\nexport default function Toolbar(props) {\n  const { title, leftItems, rightItems } = props;\n  return (\n    <div className=\"toolbar bg-dark\">\n      <div className=\"left-items\">{leftItems}</div>\n      <h1 className=\"toolbar-title\">{title}</h1>\n      <div className=\"right-items\">{rightItems}</div>\n    </div>\n  );\n}\n","import React from 'react';\nimport './ToolbarButton.css';\n\nexport default function ToolbarButton(props) {\n  const { icon } = props;\n  return <i className={`toolbar-button ${icon}`} />;\n}\n","import React from 'react';\nimport moment from 'moment';\nimport './Message.css';\n\nexport default function Message(props) {\n  const { data, isMine, startsSequence, endsSequence, showTimestamp } = props;\n  const friendlyTimestamp = moment(data.timestamp).format('LLLL');\n  return (\n    <div\n      className={[\n        'message',\n        `${isMine ? 'mine' : ''}`,\n        `${startsSequence ? 'start' : ''}`,\n        `${endsSequence ? 'end' : ''}`\n      ].join(' ')}>\n      {showTimestamp && <div className=\"timestamp bg-dark\">{friendlyTimestamp}</div>}\n\n      <div className=\"bubble-container\">\n        <b className={['sendBy', `${isMine}`].join(' ')}>{!isMine && data.sender}</b>\n        <div\n          className={['bubble', `${isMine ? 'mine' : ''}`].join(' ')}\n          title={friendlyTimestamp}>\n          {data.msg}\n        </div>\n        <b>{isMine && data.sender}</b>\n      </div>\n    </div>\n  );\n}\n","import socketIOClient from 'socket.io-client';\nimport React, { Component } from 'react';\nimport { store } from 'react-notifications-component';\nimport { AwesomeButtonProgress } from 'react-awesome-button';\nimport 'react-awesome-button/dist/styles.css';\nimport { connect } from 'react-redux';\nimport {\n  Nav,\n  NavItem,\n  NavLink,\n  Progress,\n  TabContent,\n  TabPane,\n  ListGroup,\n  ListGroupItem,\n  Spinner,\n  Jumbotron,\n  Button,\n  ButtonGroup,\n  Badge,\n  Card,\n  CardBody,\n  CardFooter,\n  CardHeader,\n  Col,\n  Container,\n  Row,\n  Collapse,\n  Fade\n} from 'reactstrap';\nimport classNames from 'classnames';\nimport { AppSwitch } from '@coreui/react';\nimport MessageView from '../../views/MessageList/index';\n\n// import Peer from \"../../dependencies/peerjs/index.d.ts\";\nimport Peer from 'peerjs';\nimport axios from 'axios';\nimport $ from 'jquery';\nimport './Controls.css';\nconst socket = socketIOClient(`${global.config.backendURL}/`);\n\nclass Controls extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      myIds: [0, 0],\n      myPeers: [0, 0],\n      roomName: this.props.roomName,\n      // Use Sets instead of Arrays to prevent duplicates.\n      remotePeers: new Set(),\n      remotePeersID: new Set(),\n      calls: new Array(),\n      connectedPeers: new Set(),\n      friendtkn: '',\n      myUsername: ''\n    };\n    console.log(this.state.roomName);\n    this.startScreenShare = this.startScreenShare.bind(this);\n    this.startConnection = this.startConnection.bind(this);\n    this.sendCallEndedSignal = this.sendCallEndedSignal.bind(this);\n\n    this.endCall = this.endCall.bind(this);\n  }\n\n  componentWillUnmount() {\n    this.endCall(() => console.log('Call ended'));\n  }\n\n  componentDidUpdate(prevProps) {\n    console.log(prevProps);\n    console.log(this.props.roomName);\n    if (this.props.roomName !== prevProps.roomName) {\n      this.setState({\n        roomName: this.props.roomName\n      });\n      this.endCall();\n    }\n  }\n\n  createNotif = (title, msg, type) => {\n    store.addNotification({\n      title: title,\n      message: msg,\n      type: type,\n      container: 'top-right',\n      animationIn: ['animated', 'fadeIn'],\n      animationOut: ['animated', 'fadeOut'],\n      dismiss: {\n        duration: 3000,\n        pauseOnHover: true\n      }\n    });\n  };\n\n  switchContext = (e) => {\n    if (e.target) e = e.target;\n    try {\n      const context = document.getElementById('context');\n      if (e.srcObject == context.srcObject) return;\n      const username = e.nextElementSibling.innerText;\n      context.style.display = 'inline';\n      context.poster =\n        'https://dummyimage.com/1024x576/2f353a/ffffff.jpg&text=' + username;\n      context.srcObject = e.srcObject;\n      context.play();\n      $('#context').removeClass().addClass(e.id);\n    } catch (err) {\n      console.log('The selected stream is old');\n      console.log(err);\n    }\n  };\n\n  createPeer(id) {\n    var peer = new Peer(id, {\n      host: 'localhost',\n      port: 9000,\n      path: '/peerserver',\n      config: {\n        iceServers: [\n          { urls: 'stun:stun.l.google.com:19302' },\n          {\n            url: 'turn:numb.viagenie.ca',\n            credential: 'HWeF3pu@u2RfeYD',\n            username: 'veddandekar6@gmail.com'\n          }\n        ]\n      } /* Sample servers, please use appropriate ones */\n    });\n    return peer;\n  }\n  updateSelfPeerInfo(self, peer, id, type) {\n    console.log(self.state);\n    var isVideo = type === 'video' ? 1 : 0;\n    console.log(isVideo);\n    if (self.state.myPeers[isVideo] !== 0) {\n      self.state.myPeers[isVideo].destroy();\n      self.deleteAllVideoElements();\n      self.setState({\n        calls: new Array()\n      });\n    }\n    var peers = self.state.myPeers;\n    var myIDs = self.state.myIds;\n    peers[isVideo] = peer;\n    myIDs[isVideo] = id;\n    self.setState({\n      myPeers: peers,\n      myIds: myIDs\n    });\n    console.log(self.state);\n  }\n\n  async startScreenShare(type, next) {\n    const self = this;\n    var tkn;\n    // Get a new peerId.\n    var peer = self.createPeer();\n\n    // Upload the PeerID to the server, get an old ID, if it exists to be used\n    await peer.on('open', function (id) {\n      tkn = id;\n      const reqData = {\n        roomName: self.state.roomName,\n        tkn: tkn,\n        type: type\n      };\n      axios\n        .post(`${global.config.backendURL}/api/room/goonline`, reqData, {\n          headers: {\n            'milaap-auth-token': localStorage.getItem('milaap-auth-token')\n          }\n        })\n        .then((res) => {\n          console.log(res);\n          var onlineArray = res.data.online;\n          if (res.data.changePeer) {\n            // Kept for backward compatibility. Will not execute with latest commit.\n            peer.destroy();\n            peer = self.createPeer(res.data.changePeer);\n            console.log(peer.disconnected);\n            console.log('Using old Id');\n            console.log(peer.connections);\n            if (peer.disconnected) {\n              peer.reconnect();\n              console.log('peer was disconnected, reconnecting...');\n              peer.on('open', function (id) {\n                console.log('reconnected');\n                console.log('My token: ' + id);\n                console.log('using older id: ' + id);\n                self.setUpConnections(self, peer, id, type, onlineArray);\n              });\n            } else {\n              peer.reconnect();\n              self.setUpConnections(self, peer, id, type, onlineArray);\n            }\n            next();\n          } else {\n            console.log('My token: ' + id);\n            self.updateSelfPeerInfo(self, peer, id, type);\n            /*\n    var peers = self.state.myPeers;\n    var myIDs = self.state.myIds;\n    peers.add(peer);\n    myIDs.add(id);\n    self.setState({\n      myPeers: peers,\n      myIds: myIDs,\n    });\n    */\n            console.log(self.state);\n            self.setUpConnections(self, peer, id, type, onlineArray);\n            next();\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n          next(false, 'Failed');\n        });\n    });\n  }\n\n  setUpConnections(self, peer, id, type, onlineArray) {\n    self.getMyMediaStream(self, type).then((media) => {\n      // Wait for new incoming connections.\n      self.waitForConnections(self, peer);\n\n      // Make requests to currently online users.\n\n      onlineArray.forEach((val, index) => {\n        if (val.username === this.props.username && val.type === type) {\n          return;\n        }\n        console.log('Connecting to ' + onlineArray[index].tkn);\n        self.startConnection(self, onlineArray[index].tkn, peer);\n      });\n    });\n  }\n\n  // Function to get the media stream for the user and store it in state so that it\n  // can be used multiple times without requiring permission.\n  async getMyMediaStream(self, type) {\n    if (type === 'screen') {\n      // TODO: Add try catch to handle case when user denies access\n\n      await navigator.mediaDevices\n        .getDisplayMedia({\n          video: { width: 1024, height: 576 },\n          audio: true\n        })\n        .then((media) => {\n          self.setState({\n            myMediaStreamObj: media\n          });\n          self.createVideoElement(self, media, 'me');\n          return media;\n        });\n    } else if (type === 'video') {\n      // TODO: Add try catch to handle case when user denies access\n\n      await navigator.mediaDevices\n        .getUserMedia({\n          video: { width: 1024, height: 576 },\n          audio: true\n        })\n        .then((media) => {\n          self.setState({\n            myMediaStreamObj: media\n          });\n          self.createVideoElement(self, media, 'me');\n          return media;\n        });\n    }\n  }\n\n  // Asynchronous function to start a connection to peer with ID friendtkn.\n  // The media stream to be used is chosen from this.state.myMediaStreamObj\n  async startConnection(self, friendtkn, peer) {\n    console.log('starting connection with ' + friendtkn);\n    // console.log(friendtkn);\n    var mediaa = self.state.myMediaStreamObj;\n    console.log(mediaa);\n    self.sendMediaStream(self, peer, mediaa, friendtkn, false);\n    /*\nvar connectedPeers = self.state.connectedPeers;\nconnectedPeers.add(friendtkn);\nself.setState({\nconnectedPeers: connectedPeers,\n});\n*/\n  }\n\n  // Function to wait for incoming requests onf 'peer' and handle them.\n  waitForConnections(self, peer) {\n    console.log('Waiting for connections....');\n    var mediaa = self.state.myMediaStreamObj;\n    peer.on('call', function (call) {\n      self.sendMediaStream(self, peer, mediaa, null, true, call);\n      /* This logic just hides the duplicate connections. For better performance.\n       * Duplicate connections should be closed. */\n      // calls.add(thiscall);\n      /*\nvar calls = self.state.calls;\nconsole.log(calls);\nvar duplicateCall = false;\ncalls.forEach((val, index) => {\nconsole.log('checking with ' + val.peer);\nif(val.peer == call.peer) {\n        duplicateCall = val;\n        return;\n}\n});\nif(duplicateCall) {\nconsole.log('closing a duplicate call.');\nconsole.log(duplicateCall.peer);\n//      calls.delete(duplicateCall);\nduplicateCall.close();\n}\n//calls.add(call);\nconsole.log(calls);\nself.setState(\n{\n//call: peer.call(friendtkn, media),//to be updated appropriately\ncalls: [...self.state.calls, call],\n//calls: calls,\n},\n);\n*/\n      /*\nvar connectedPeers = self.state.connectedPeers;\nconnectedPeers.add(call.peer);\nself.setState({\nconnectedPeers: connectedPeers,\n});\n*/\n    });\n  }\n\n  // Function to send the mediaStream passed through media. if isAnswer is true,\n  // the mediaStream is sent as an answer to the 'call' object, otherwise a new call is created.\n  sendMediaStream(self, peer, media, friendtkn, isAnswer, call) {\n    if (isAnswer) {\n      friendtkn = call.peer;\n      console.log('Connected to ' + friendtkn);\n      console.log(call.metadata);\n      this.createNotif('Member joined', `${call.metadata} joined the call`, 'info');\n    }\n    var tracks = media.getTracks();\n    var track = tracks[0];\n    var thiscall = call;\n\n    // triggered when our stream being sent ends.\n    track.addEventListener('ended', () => {\n      console.log('My stream ended. Please show this');\n      thiscall.close();\n      self.deleteVideoElement(thiscall.peer);\n      // self.sendRequestToEndCall();\n      // self.startConnection(friendtkn, peer, self);\n    });\n\n    // Can't figure out the exact conditions which cause this event to be handled,\n    // but this handler maybe useful, if we are enabling and disabling streams.\n    track.addEventListener('mute', () => {\n      console.log('My stream muted. Please show this');\n    });\n\n    if (isAnswer) {\n      thiscall.answer(media);\n    } else {\n      console.log(media.getTracks());\n      thiscall = peer.call(friendtkn, media, { metadata: this.state.myUsername });\n    }\n    self.addHandlersToCall(\n      self,\n      thiscall,\n      friendtkn,\n      thiscall.metadata,\n      peer,\n      isAnswer\n    );\n    //console.log('exit4d');\n  }\n\n  // Add Event handlers to the thiscall call - error, stream used as of now.\n  addHandlersToCall(self, thiscall, friendtkn, username, peer, isAnswer) {\n    // Triggered when an error is observed in connection.\n    thiscall.on('error', (err) => {\n      // TODO: Add condition to close the connection.\n      console.log('Connection failed for ' + friendtkn);\n      console.log(friendtkn);\n      console.log(err);\n      thiscall.close();\n      self.deleteVideoElement(thiscall.peer);\n      // self.startConnection(self, friendtkn, peer);\n\n      // If an error is observed, we automatically send another request to start connection,\n      // to provide reliability. Since, we dont want both the receiver and username of the stream\n      // to send new calls, only the receiver initiates a new connection.\n      if (!isAnswer) {\n        console.log(friendtkn);\n        // self.startConnection(self, friendtkn, peer);\n      }\n    });\n\n    // Triggered when receiving a stream from peer.\n    thiscall.on('stream', function (stream) {\n      console.log(stream.getTracks());\n      console.log('stream received from' + thiscall.peer);\n      var calls = self.state.calls;\n      console.log(calls);\n      var duplicateCall = false;\n      var duplicateCallIndex = -1;\n      calls.forEach((val, index) => {\n        console.log('checking with ' + val.peer);\n        if (val.peer === thiscall.peer) {\n          duplicateCallIndex = index;\n          duplicateCall = val;\n        }\n      });\n      /* Check with my tokens to prevent self calls when having both video and screen. */\n      console.log(self.state.myIds);\n      self.state.myIds.forEach((val, index) => {\n        console.log('checking with ' + val);\n        if (val === thiscall.peer) {\n          duplicateCallIndex = index;\n          duplicateCall = val;\n        }\n      });\n      if (duplicateCall) {\n        console.log('closing a duplicate call.');\n        console.log(duplicateCall.peer);\n        //      calls.delete(duplicateCall);\n        // calls.splice(duplicateCallIndex, 1);\n        // duplicateCall.close();\n      }\n      // calls.add(call);\n      console.log(calls);\n      console.log(thiscall);\n      self.setState({\n        // call: peer.call(friendtkn, media),//to be updated appropriately\n        calls: [...calls, thiscall]\n        // calls: calls,\n      });\n      self.createStream(self, stream, friendtkn, username);\n    });\n  }\n\n  // Add event handlers to the incoming stream and do some other processing,\n  // before being sent to the video object to be displayed on screen.\n  createStream(self, stream, friendtkn, username) {\n    var tracks = stream.getTracks();\n    var track = tracks[0];\n\n    // Experimental event handler - to be removed.\n    stream.onremovetrack = function (evt) {\n      console.log('Track removed');\n      console.log(evt);\n    };\n\n    // console.log(track.remote);\n\n    // These handlers being added are to the incoming stream we are receiving, while\n    // the handlers added before were to the stream which we were sending.\n\n    // triggered when the remote stream being received ends due to connection error\n    track.addEventListener('ended', () => {\n      console.log('Receiving stream ended. Please show this');\n    });\n\n    // Can't figure out the exact conditions which cause this event to be handled,\n    // but this handler maybe useful, if we are enabling and disabling streams.\n    track.addEventListener('mute', () => {\n      console.log('muted. Please show this');\n    });\n\n    console.log(stream.getTracks());\n\n    self.createVideoElement(self, stream, friendtkn, username);\n\n    // self.videoRef.current.srcObject = stream;\n  }\n\n  // Creates a new video element to show the stream passed to it.\n  createVideoElement(self, stream, friendtkn, username) {\n    const wrapper = document.createElement('div');\n    const video = document.createElement('video');\n    const nameTag = document.createElement('div');\n    const context = document.getElementById('context');\n    nameTag.classList.add('name-label');\n    nameTag.innerText = username || 'me';\n    video.width = '200';\n    video.id = friendtkn;\n    if (video.id == 'me') {\n      video.muted = 'true';\n    }\n    video.height = '350';\n    video.srcObject = stream;\n    video.autoplay = true;\n    video.onclick = self.switchContext;\n    wrapper.appendChild(video);\n    wrapper.appendChild(nameTag);\n    document.getElementById('videos').appendChild(wrapper);\n    if (!context.srcObject) self.switchContext(document.getElementById(friendtkn));\n  }\n\n  clearContext() {\n    const context = document.getElementById('context');\n    if (context != null) {\n      context.srcObject = null;\n      context.style.display = 'none';\n    }\n  }\n\n  deleteVideoElement(id) {\n    const video = document.getElementById(id);\n    const context = $('#context');\n    if (video) {\n      video.nextElementSibling.remove();\n      video.remove();\n    }\n    if (context.hasClass(id)) {\n      this.clearContext();\n    }\n  }\n\n  deleteAllVideoElements() {\n    /*\nlet videos = document.getElementById(\"videos\");\nvideos.empty();\n*/\n    $('#videos').empty();\n    //$('#context').empty();\n    this.clearContext();\n  }\n\n  sendCallEndedSignal() {\n    const reqData = {\n      roomName: this.state.roomName\n    };\n    axios\n      .post(`${global.config.backendURL}/api/room/exitstream`, reqData, {\n        headers: {\n          'milaap-auth-token': localStorage.getItem('milaap-auth-token')\n        }\n      })\n      .then((res) => {\n        console.log(res.data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  sendRequestToEndCall(next) {\n    const reqData = {\n      roomName: this.state.roomName\n    };\n    axios\n      .post(`${global.config.backendURL}/api/room/exitstream`, reqData, {\n        headers: {\n          'milaap-auth-token': localStorage.getItem('milaap-auth-token')\n        }\n      })\n      .then((res) => {\n        console.log(res.data);\n        var idToBeDestroyed = res.data.idToBeDestroyed;\n        console.log(this.state.myPeers);\n        this.state.myPeers.forEach((val, index) => {\n          if (val) {\n            val.destroy();\n          }\n        });\n        // Clear all state variables associated with calls.\n        this.setState({\n          myIds: [0, 0],\n          myPeers: [0, 0],\n          // Use Sets instead of Arrays to prevent duplicates.\n          remotePeers: new Set(),\n          remotePeersID: new Set(),\n          calls: new Array(),\n          connectedPeers: new Set(),\n          friendtkn: ''\n        });\n        if (next) {\n          next();\n        }\n        return;\n      })\n      .catch((err) => {\n        console.log(err);\n        if (next) {\n          next(false, 'Error');\n        }\n        return;\n      });\n  }\n\n  async endCall(next) {\n    await this.sendRequestToEndCall(next);\n    if (this.state.myMediaStreamObj) {\n      this.state.myMediaStreamObj.getTracks().forEach((track) => {\n        console.log(track);\n        track.stop();\n      });\n      this.state.myMediaStreamObj.getTracks().forEach((track) => {\n        this.state.myMediaStreamObj.removeTrack(track);\n      });\n      this.setState({\n        myMediaStreamObj: null\n      });\n    }\n    // Add by appropriate UI changes which clears the screen.\n    this.deleteAllVideoElements();\n  }\n\n  render() {\n    const self = this;\n    return (\n      <Container>\n        <br />\n        <br />\n        <Row className=\"justify-content-center text-center\">\n          <AwesomeButtonProgress\n            type=\"primary\"\n            size=\"medium\"\n            action={(element, next) => {\n              this.startScreenShare('video', next);\n            }}>\n            <i className=\"icon-user icons\"></i>\n            <span> Video</span>\n          </AwesomeButtonProgress>\n          <AwesomeButtonProgress\n            type=\"primary\"\n            size=\"medium\"\n            action={(element, next) => this.startScreenShare('screen', next)}>\n            <i className=\"icon-screen-desktop icons\"></i>\n            <span> Screen</span>\n          </AwesomeButtonProgress>\n          <AwesomeButtonProgress\n            type=\"primary\"\n            size=\"medium\"\n            // visible={!self.state.calls.length} //use this if we want it completely hidden until needed instead\n            disabled={!self.state.myMediaStreamObj}\n            action={(element, next) => {\n              this.endCall(next);\n            }}>\n            <i className=\"icon-call-end icons\"></i>\n            <span> End Call</span>\n          </AwesomeButtonProgress>\n        </Row>\n        <br />\n      </Container>\n    );\n  }\n}\nconst mapStateToProps = (state) => {\n  console.log(state);\n  return {\n    username: state.loginReducer.username\n  };\n};\n\nexport default connect(mapStateToProps)(Controls);\n","import React, { Component, lazy, Suspense } from 'react';\nimport { store } from 'react-notifications-component';\nimport { Bar, Line } from 'react-chartjs-2';\nimport socketIOClient from 'socket.io-client';\nimport axios from 'axios';\nimport {\n  Badge,\n  Button,\n  ButtonDropdown,\n  ButtonGroup,\n  ButtonToolbar,\n  Card,\n  CardBody,\n  CardFooter,\n  CardHeader,\n  CardTitle,\n  Col,\n  Container,\n  Dropdown,\n  DropdownItem,\n  DropdownMenu,\n  DropdownToggle,\n  Form,\n  Input,\n  InputGroup,\n  InputGroupAddon,\n  InputGroupText,\n  ListGroup,\n  ListGroupItem,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Tooltip,\n  UncontrolledTooltip,\n  Jumbotron,\n  Progress,\n  Row,\n  Spinner,\n  Table,\n  Label\n} from 'reactstrap';\nimport './MemberList.css';\nconst socket = socketIOClient(`${global.config.backendURL}/`);\n\nclass MemberList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      users: [],\n      guests: [],\n      newmember: '',\n      modal: false\n    };\n    this.toggle = this.toggle.bind(this);\n    this.addMember = this.addMember.bind(this);\n    this.handleNewMemberChange = this.handleNewMemberChange.bind(this);\n    this.shareLink = this.shareLink.bind(this);\n    /*\n    socket.on('userJoined', (data) => {\n      if (this.state.roomName !== 'dashboard') {\n        // YET TO BE TESTED\n        this.getActive();\n      }\n    });\n    socket.on('userOnline', (data) => {\n      if (this.state.roomName !== 'dashboard') this.getActive();\n    });\n    socket.on('userExit', (data) => {\n      if (this.state.roomName !== 'dashboard') this.getActive();\n    });\n    */\n  }\n\n  shareLink() {\n    const link = document.querySelector('link[rel=canonical]')\n      ? document.querySelector('link[rel=canonical]').href\n      : document.location.href;\n    if (navigator.share) {\n      navigator\n        .share({\n          title: 'Join via Link',\n          url: link\n        })\n        .then(() => {\n          console.log('Link Shared!');\n        })\n        .catch(console.error);\n    } else {\n      navigator.clipboard\n        .writeText(link)\n        .then(() => {\n          store.addNotification({\n            title: 'Link copied',\n            message: 'Link copied to clipboard!',\n            type: 'success',\n            container: 'top-right',\n            animationIn: ['animated', 'fadeIn'],\n            animationOut: ['animated', 'fadeOut'],\n            dismiss: {\n              duration: 3000,\n              pauseOnHover: true\n            }\n          });\n        })\n        .catch(console.log('Sorry try again'));\n    }\n  }\n\n  toggle() {\n    this.setState({\n      modal: !this.state.modal\n    });\n  }\n\n  addMember() {\n    const reqData = {\n      username: this.state.newmember,\n      roomName: this.props.roomName\n    };\n    console.log(reqData);\n    axios\n      .post(`${global.config.backendURL}/api/room/addusertoroom`, reqData, {\n        headers: {\n          'milaap-auth-token': localStorage.getItem('milaap-auth-token')\n        }\n      })\n      .then((res) => {\n        console.log(res);\n        if (res.status == 200) {\n          this.toggle();\n          this.setState({\n            users: [...this.state.users, reqData.username]\n          });\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  handleNewMemberChange(e) {\n    this.setState({\n      newmember: e.target.value\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.users !== prevProps.users) {\n      this.setState({\n        users: this.props.users\n      });\n    }\n    if (this.props.guests !== prevProps.guests) {\n      this.setState({\n        guests: this.props.guests\n      });\n    }\n  }\n\n  loading = () => <div className=\"animated fadeIn pt-1 text-center\">Loading...</div>;\n\n  render() {\n    return (\n      <Container id=\"memberlist\">\n        <Row>\n          <Col>\n            <h3> Members </h3>\n          </Col>\n          <Col>\n            {/* <button class=\"btn-danger\"> */}\n            <i\n              style={{ cursor: 'pointer' }}\n              class=\"fa fa-user-plus\"\n              onClick={this.toggle}>\n              {' '}\n              Add\n            </i>\n            {/* </button> */}\n          </Col>\n        </Row>\n        <h5> Admins </h5>\n        <ListGroup flush>\n          {this.state.users && this.state.users.length > 0\n            ? this.state.users.map((user) => {\n                return (\n                  <ListGroupItem className=\"bg-dark\" key={Math.random()}>\n                    {user}\n                  </ListGroupItem>\n                );\n              })\n            : 'No members yet'}\n        </ListGroup>\n        <br />\n        <ListGroup flush>\n          <h5> Guests </h5>\n          {this.state.guests && this.state.guests.length > 0\n            ? this.state.guests.map((user) => {\n                return (\n                  <ListGroupItem className=\"bg-dark\" key={Math.random()}>\n                    {user}\n                  </ListGroupItem>\n                );\n              })\n            : 'No guests yet'}\n        </ListGroup>\n\n        <Modal isOpen={this.state.modal} toggle={this.toggle}>\n          <ModalHeader className=\"bg-dark\" toggle={this.toggle}>\n            Add Members\n          </ModalHeader>\n          <ModalBody className=\"bg-dark\">\n            <Form>\n              <h4>Existing Members</h4>\n              <InputGroup className=\"ml-2\">\n                <InputGroupAddon addonType=\"prepend\">\n                  <InputGroupText className=\"bg-dark\">\n                    <i className=\"icon-user\"></i>\n                  </InputGroupText>\n                </InputGroupAddon>\n                <Input\n                  type=\"text\"\n                  className=\"mr-2 bg-dark text-light\"\n                  placeholder=\"Username\"\n                  autoComplete=\"username\"\n                  value={this.state.newmember}\n                  onChange={this.handleNewMemberChange}\n                />{' '}\n                <Button color=\"primary\" onClick={this.addMember}>\n                  Add\n                </Button>\n              </InputGroup>\n              <br />\n              <h4>Invite Guests</h4>\n              <Label>Share the following link with the guest</Label>\n              <Jumbotron\n                style={{ cursor: 'pointer' }}\n                className=\"p-2 m-2 bg-secondary text-dark\"\n                id=\"linkHere\"\n                onClick={this.shareLink}>\n                {document.querySelector('link[rel=canonical]')\n                  ? document.querySelector('link[rel=canonical]').href\n                  : document.location.href}\n              </Jumbotron>\n              <UncontrolledTooltip placement=\"bottom\" target=\"linkHere\">\n                Click to share\n              </UncontrolledTooltip>\n            </Form>\n          </ModalBody>\n          <ModalFooter className=\"bg-dark\">\n            <Button color=\"success\" onClick={this.toggle}>\n              Close\n            </Button>\n          </ModalFooter>\n        </Modal>\n      </Container>\n    );\n  }\n}\n\nexport default MemberList;\n"],"sourceRoot":""}