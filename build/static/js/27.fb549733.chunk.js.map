{"version":3,"sources":["redux/loginRedux/loginAction.js","containers/DefaultLayout/peerHandler.js","../node_modules/peerjs/dist sync","routes.js","containers/DefaultLayout/DefaultLayout.js"],"names":["notificationOpts","title","message","position","autoDismiss","redirectToJoinPage","type","REDIRECT_TO_JOIN","logout","LOGOUT","login","username","password","console","log","reqData","dispatch","LOGIN_REQUEST","axios","post","global","config","backendURL","then","res","data","localStorage","setItem","token","LOGIN_SUCCESS","loginSuccess","catch","err","error","LOGIN_FAILURE","Notifications","React","Component","webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","Breadcrumbs","lazy","Cards","Carousels","Collapses","Dropdowns","Forms","Jumbotrons","ListGroups","Navbars","Navs","Paginations","Popovers","ProgressBar","Switches","Tables","Tabs","Tooltips","BrandButtons","ButtonDropdowns","ButtonGroups","Buttons","Charts","Dashboard","CoreUIIcons","Flags","FontAwesome","SimpleLineIcons","Alerts","Badges","Modals","Colors","routes","path","exact","name","component","socket","socketIOClient","DefaultHeader","getGroupElements","rooms","groupElements","undefined","forEach","item","index","groupElem","url","icon","state","push","getFriendList","active","activeUsers","friend","DefaultLayout","props","getRooms","a","getItem","reqHeader","headers","status","setState","GroupList","FriendList","navigation","items","children","badge","variant","text","class","loading","className","friends","userToken","on","preventDefault","this","removeItem","history","location","store","addNotification","container","animationIn","animationOut","dismiss","duration","pauseOnHover","pathname","match","room","split","to","Fragment","fixed","fallback","onLogout","signOut","display","navConfig","router","fluid","map","route","idx","key","render","from","connect","actions"],"mappings":"wHAAA,2KA2BMA,EAAmB,CAEvBC,MAAO,QACPC,QAAS,+BACTC,SAAU,KACVC,YAAa,GAuBFC,EAAqB,WAChC,MAAO,CACLC,KAAMC,MAIGC,EAAS,WACpB,MAAO,CACLF,KAAMG,MAIGC,EAAQ,SAACC,EAAUC,GAC9BC,QAAQC,IAAI,gBACZ,IAAIC,EAAU,CACZJ,SAAUA,EACVC,SAAUA,GAEZ,OAAO,SAAUI,GACfA,EAtCK,CACLV,KAAMW,MAsCNC,IACGC,KADH,UACWC,EAAOC,OAAOC,WADzB,cACiDP,GAC9CQ,MAAK,SAACC,GACLX,QAAQC,IAAIU,EAAIC,MAChBC,aAAaC,QAAQ,oBAAqBH,EAAIC,KAAKG,OACnDZ,EAvCoB,SAACL,GAC3B,MAAO,CACLL,KAAMuB,IACNlB,SAAUA,GAoCGmB,CAAanB,OAEvBoB,OAAM,SAACC,GAlCc,IAACC,EAmCrBjB,GAnCqBiB,EAmCCD,EAlCrB,CACL1B,KAAM4B,IACND,MAAOA,KAiCHjB,EAASmB,IAAcF,MAAMjC,W,qMC9EXoC,IAAMC,W,sCCNhC,SAASC,EAAoBC,GAC5B,IAAIC,EAAI,IAAIC,MAAM,uBAAyBF,EAAM,KAEjD,MADAC,EAAEE,KAAO,mBACHF,EAEPF,EAAoBK,KAAO,WAAa,MAAO,IAC/CL,EAAoBM,QAAUN,EAC9BO,EAAOC,QAAUR,EACjBA,EAAoBS,GAAK,K,iCCRzB,oBAEMC,EAAcZ,IAAMa,MAAK,kBAAM,kCAC/BC,EAAQd,IAAMa,MAAK,kBAAM,wDACzBE,EAAYf,IAAMa,MAAK,kBAAM,wDAC7BG,EAAYhB,IAAMa,MAAK,kBAAM,wDAC7BI,EAAYjB,IAAMa,MAAK,kBAAM,wDAC7BK,EAAQlB,IAAMa,MAAK,kBAAM,uEACzBM,EAAanB,IAAMa,MAAK,kBAAM,kCAC9BO,EAAapB,IAAMa,MAAK,kBAAM,kCAC9BQ,EAAUrB,IAAMa,MAAK,kBAAM,+DAC3BS,EAAOtB,IAAMa,MAAK,kBAAM,wDACxBU,EAAcvB,IAAMa,MAAK,kBAAM,kCAC/BW,EAAWxB,IAAMa,MAAK,kBAAM,+DAC5BY,EAAczB,IAAMa,MAAK,kBAAM,kCAC/Ba,EAAW1B,IAAMa,MAAK,kBAAM,kCAC5Bc,EAAS3B,IAAMa,MAAK,kBAAM,kCAC1Be,EAAO5B,IAAMa,MAAK,kBAAM,kCACxBgB,EAAW7B,IAAMa,MAAK,kBAAM,+DAC5BiB,EAAe9B,IAAMa,MAAK,kBAAM,kCAChCkB,EAAkB/B,IAAMa,MAAK,kBAAM,wDACnCmB,EAAehC,IAAMa,MAAK,kBAAM,wDAChCoB,EAAUjC,IAAMa,MAAK,kBAAM,kCAC3BqB,EAASlC,IAAMa,MAAK,kBAAM,wDAC1BsB,EAAYnC,IAAMa,MAAK,kBAAM,6EAC7BuB,EAAcpC,IAAMa,MAAK,kBAAM,kCAC/BwB,EAAQrC,IAAMa,MAAK,kBAAM,kCACzByB,EAActC,IAAMa,MAAK,kBAAM,wDAC/B0B,EAAkBvC,IAAMa,MAAK,kBAAM,kCACnC2B,EAASxC,IAAMa,MAAK,kBAAM,wDAC1B4B,EAASzC,IAAMa,MAAK,kBAAM,kCAC1B6B,EAAS1C,IAAMa,MAAK,kBAAM,wDAC1B8B,EAAS3C,IAAMa,MAAK,kBAAM,yDAS1B+B,EAAS,CACb,CAAEC,KAAM,IAAKC,OAAO,EAAMC,KAAM,QAChC,CAAEF,KAAM,aAAcE,KAAM,YAAaC,UAAWb,GACpD,CAAEU,KAAM,SAAUC,OAAO,EAAMC,KAAM,QAASC,UAAWL,GACzD,CAAEE,KAAM,gBAAiBE,KAAM,SAAUC,UAAWL,GACpD,CAAEE,KAAM,oBAAqBE,KAAM,aAAcC,UAbhChD,IAAMa,MAAK,kBAAM,mCAclC,CAAEgC,KAAM,QAASC,OAAO,EAAMC,KAAM,OAAQC,UAAWlC,GACvD,CAAE+B,KAAM,cAAeE,KAAM,QAASC,UAAWlC,GACjD,CAAE+B,KAAM,cAAeE,KAAM,QAASC,UAAW9B,GACjD,CAAE2B,KAAM,iBAAkBE,KAAM,WAAYC,UAAWtB,GACvD,CAAEmB,KAAM,eAAgBE,KAAM,SAAUC,UAAWrB,GACnD,CAAEkB,KAAM,aAAcE,KAAM,OAAQC,UAAWpB,GAC/C,CAAEiB,KAAM,oBAAqBE,KAAM,cAAeC,UAAWpC,GAC7D,CAAEiC,KAAM,kBAAmBE,KAAM,WAAYC,UAAWjC,GACxD,CAAE8B,KAAM,kBAAmBE,KAAM,WAAYC,UAAWhC,GACxD,CAAE6B,KAAM,kBAAmBE,KAAM,YAAaC,UAAW/B,GACzD,CAAE4B,KAAM,mBAAoBE,KAAM,aAAcC,UAAW7B,GAC3D,CAAE0B,KAAM,oBAAqBE,KAAM,cAAeC,UAAW5B,GAC7D,CAAEyB,KAAM,gBAAiBE,KAAM,UAAWC,UAAW3B,GACrD,CAAEwB,KAAM,aAAcE,KAAM,OAAQC,UAAW1B,GAC/C,CAAEuB,KAAM,oBAAqBE,KAAM,cAAeC,UAAWzB,GAC7D,CAAEsB,KAAM,iBAAkBE,KAAM,WAAYC,UAAWxB,GACvD,CAAEqB,KAAM,qBAAsBE,KAAM,eAAgBC,UAAWvB,GAC/D,CAAEoB,KAAM,iBAAkBE,KAAM,WAAYC,UAAWnB,GACvD,CAAEgB,KAAM,WAAYC,OAAO,EAAMC,KAAM,UAAWC,UAAWf,GAC7D,CAAEY,KAAM,mBAAoBE,KAAM,UAAWC,UAAWf,GACxD,CACEY,KAAM,4BACNE,KAAM,mBACNC,UAAWjB,GAEb,CACEc,KAAM,yBACNE,KAAM,gBACNC,UAAWhB,GAEb,CACEa,KAAM,yBACNE,KAAM,gBACNC,UAAWlB,GAEb,CAAEe,KAAM,SAAUC,OAAO,EAAMC,KAAM,QAASC,UAAWZ,GACzD,CAAES,KAAM,sBAAuBE,KAAM,eAAgBC,UAAWZ,GAChE,CAAES,KAAM,eAAgBE,KAAM,QAASC,UAAWX,GAClD,CAAEQ,KAAM,sBAAuBE,KAAM,eAAgBC,UAAWV,GAChE,CACEO,KAAM,2BACNE,KAAM,oBACNC,UAAWT,GAEb,CACEM,KAAM,iBACNC,OAAO,EACPC,KAAM,gBACNC,UAAWR,GAEb,CAAEK,KAAM,wBAAyBE,KAAM,SAAUC,UAAWR,GAC5D,CAAEK,KAAM,wBAAyBE,KAAM,SAAUC,UAAWP,GAC5D,CAAEI,KAAM,wBAAyBE,KAAM,SAAUC,UAAWN,GAC5D,CAAEG,KAAM,WAAYE,KAAM,UAAWC,UAlEvBhD,IAAMa,MAAK,kBAAM,yDAmE/B,CAAEgC,KAAM,UAAWE,KAAM,SAAUC,UAAWd,GAC9C,CAAEW,KAAM,SAAUC,OAAO,EAAMC,KAAM,QAASC,UAnElChD,IAAMa,MAAK,kBAAM,mCAoE7B,CAAEgC,KAAM,aAAcC,OAAO,EAAMC,KAAM,eAAgBC,UAnE9ChD,IAAMa,MAAK,kBAAM,mCAoE5B,CAAEgC,KAAM,mBAAoBC,OAAO,EAAMC,KAAM,OAAQC,UAnE5ChD,IAAMa,MAAK,kBAAM,+EAsEf+B,O,uSCjFTK,EAASC,IAAe,GAAD,OAAIlE,EAAOC,OAAOC,WAAlB,MAGvBiE,GAFenD,IAAMa,MAAK,kBAAM,6EAChBb,IAAMa,MAAK,kBAAM,kCACjBb,IAAMa,MAAK,kBAAM,6EACnBb,IAAMa,MAAK,kBAAM,6EACrC,SAASuC,EAAiBC,GACxB,IAAMC,EAAgB,GACtB,YAAcC,IAAVF,EACK,IAETA,EAAMG,SAAQ,SAACC,EAAMC,GACnB,IAAMC,EAAY,GAClBA,EAAUZ,KAAOU,EACjBE,EAAUC,IAAM,UAAYH,EAC5BE,EAAUE,KAAO,sBACjBF,EAAUG,OAAQ,EAClBR,EAAcS,KAAKJ,MAEdL,GAGT,SAASU,EAAcC,GACrB,IAAMC,EAAc,GACpB,YAAeX,IAAXU,EACK,IAETA,EAAOT,SAAQ,SAACC,EAAMC,GACpB,IAAMS,EAAS,GACfA,EAAOpB,KAAOU,EAEdU,EAAON,KAAO,YACdM,EAAOL,OAAQ,EACfI,EAAYH,KAAKI,MAEZD,G,IAGHE,E,kDA6FJ,WAAYC,GAAQ,IAAD,uBACjB,cAAMA,IA7FRC,SA4FmB,sBA5FR,8BAAAC,EAAA,6DACH/E,EAAQF,aAAakF,QAAQ,qBAC7BC,EAAY,CAAE,oBAAqBjF,GAFhC,SAGHV,IACHC,KADG,UAECC,EAAOC,OAAOC,WAFf,sBAGF,GACA,CACEwF,QAASD,IAGZtF,MAAK,SAACC,GACL,GAAmB,MAAfA,EAAIuF,OAAR,CAmBAlG,QAAQC,IAAIU,GACZ,IAAIiE,EAAQjE,EAAIC,KAAKgE,MACrB,EAAKuB,SAAS,CAAEvB,MAAOA,IAEvB,IAAMwB,EAAYzB,EAAiBC,GACnCvE,IACGC,KADH,UAEOC,EAAOC,OAAOC,WAFrB,uBAGI,GACA,CACEwF,QAAS,CACP,oBAAqBpF,aAAakF,QAAQ,wBAI/CrF,MAAK,SAACC,GACLX,QAAQC,IAAIU,GACZ,IAAI6E,EAAS7E,EAAIC,KAAK4E,OACtBxF,QAAQC,IAAIuF,GACZ,IAAMa,EAAad,EAAcC,GACjCxF,QAAQC,IAAR,eAAiBmG,IACjB,EAAKD,SAAS,CACZG,WAAY,CACVC,MAAM,CACJ,CACEnH,OAAO,EACPkF,KAAM,UACNc,KAAM,gBAJL,mBAMAiB,GANA,CAOH,CACEjH,OAAO,EACPkF,KAAM,QACNc,KAAM,cACNoB,SAAU,CACR,CAEElC,KAAM,mBACNc,KAAM,cACNqB,MAAO,CACLC,QAAS,OACTC,KAAM,OAERC,MAAO,OApBV,YAwBAR,UAKVlF,OAAM,SAACC,GACNnB,QAAQC,IAAIkB,WAvEd,EAAKgF,SAAS,CACZG,WAAY,CACVC,MAAO,CACL,CACEnH,OAAO,EACPkF,KAAM,QACNc,KAAM,eAER,CACEA,KAAM,YACNd,KAAM,sBACNa,IAAK,iBA+DhBjE,OAAM,SAACC,GACNnB,QAAQC,IAAIkB,MAxFP,2CA4FQ,EA+EnB0F,QAAU,kBAAM,yBAAKC,UAAU,oCAAf,eA3Ed,IAAMT,EAAad,OADfwB,GAEEX,EAAYzB,OAHdC,GAoCJ,OAhCA,EAAKS,MAAQ,CACXT,MAAO,GACPoC,UAAWnG,aAAakF,QAAQ,qBAChCO,WAAY,CACVC,MAAO,CACL,CACEnH,OAAO,EACPkF,KAAM,UACNc,KAAM,eAERiB,EACA,CACEjH,OAAO,EACPkF,KAAM,QACNc,KAAM,cACNoB,SAAU,CACR,CAEElC,KAAM,mBACNc,KAAM,cACNqB,MAAO,CACLC,QAAS,OACTC,KAAM,OAERC,MAAO,MAIbR,KAIuB,OAAzB,EAAKf,MAAM2B,UACb,gBAEF,EAAKnB,WACL,EAAKR,MAAQ,CACXiB,WAAY,CACVC,MAAO,CACL,CACEnH,OAAO,EACPkF,KAAM,UACNc,KAAM,eAERiB,EACA,CACEjH,OAAO,EACPkF,KAAM,QACNc,KAAM,cACNoB,SAAU,CACR,CAEElC,KAAM,mBACNc,KAAM,cACNqB,MAAO,CACLC,QAAS,OACTC,KAAM,OAERC,MAAO,MAIbR,KAIN5B,EAAOyC,GAAG,WAAW,SAACrG,GACpBZ,QAAQC,IAAI,cACZD,QAAQC,IAAIW,GACZ,EAAKiF,cA3EU,G,oDAiFXlE,GACNA,EAAEuF,iBACFC,KAAKvB,MAAMjG,SACXkB,aAAauG,WAAW,qBACxBD,KAAKvB,MAAMyB,QAAQ/B,KAAK,Y,+CAIUR,IAA9BqC,KAAKvB,MAAM0B,SAASjC,OACtBkC,QAAMC,gBAAgB,CACpBpI,MAAM,MAAD,OAAQ+H,KAAKvB,MAAM0B,SAASjC,OACjChG,QAAS,uBACTI,KAAM,UAENgI,UAAW,YACXC,YAAa,CAAC,WAAY,UAC1BC,aAAc,CAAC,WAAY,WAC3BC,QAAS,CACPC,SAAU,IACVC,cAAc,O,+BAMZ,IAAD,OACP,GAAkD,OAA9CjH,aAAakF,QAAQ,qBAA+B,CACtD,GAAIoB,KAAKvB,MAAM0B,SAASS,SAASC,MAAM,WAAY,CACjD,IAAIC,EAAOd,KAAKvB,MAAM0B,SAASS,SAASG,MAAM,KAAK,GACnD,OAAO,kBAAC,IAAD,CAAUC,GAAI,CAAEJ,SAAU,QAASE,KAAMA,KAElD,OAAO,kBAAC,IAAD,CAAUE,GAAI,CAAEJ,SAAU,YAGnC,OADA/H,QAAQC,IAAIkH,KAAKvB,OAEf,kBAAC,IAAMwC,SAAP,KACE,yBAAKtB,UAAU,OACb,kBAAC,IAAD,CAAWA,UAAU,6BAA6BuB,OAAK,GACrD,kBAAC,WAAD,CAAUC,SAAUnB,KAAKN,WACvB,kBAACnC,EAAD,CAAe6D,SAAU,SAAC5G,GAAD,OAAO,EAAK6G,QAAQ7G,QAGjD,yBAAKmF,UAAU,YACb,kBAAC,IAAD,MACA,kBAAC,IAAD,CAAYuB,OAAK,EAACI,QAAQ,MACxB,kBAAC,IAAD,MACA,kBAAC,IAAD,MACA,kBAAC,WAAD,KACE,kBAAC,IAAD,eACEC,UAAWvB,KAAK9B,MAAMiB,YAClBa,KAAKvB,MAFX,CAGE+C,OAAQA,MAGZ,kBAAC,IAAD,MACA,kBAAC,IAAD,OAEF,kBAAC,IAAD,CAAWC,OAAK,EAAC1G,GAAG,kBAClB,kBAAC,WAAD,CAAUoG,SAAUnB,KAAKN,WACvB,kBAAC,IAAD,KACG1C,IAAO0E,KAAI,SAACC,EAAOC,GAClB,OAAOD,EAAMvE,UACX,kBAAC,IAAD,CACEyE,IAAKD,EACL3E,KAAM0E,EAAM1E,KACZC,MAAOyE,EAAMzE,MACbC,KAAMwE,EAAMxE,KACZ2E,OAAQ,SAACrD,GAAD,OAAW,kBAACkD,EAAMvE,UAAcqB,MAExC,QAEN,kBAAC,IAAD,CAAUsD,KAAK,IAAIf,GAAG,yB,GArPZ3G,aAgRb2H,6BAVS,SAAC9D,GACvB,MAAO,MAGkB,SAAClF,GAC1B,MAAO,CACLR,OAAQ,kBAAMQ,EAASiJ,WAIZD,CAA6CxD,I","file":"static/js/27.fb549733.chunk.js","sourcesContent":["import {\n  LOGIN_FAILURE,\n  LOGIN_REQUEST,\n  LOGIN_SUCCESS,\n  LOGOUT,\n  REDIRECT_TO_JOIN\n} from './loginActionTypes';\nimport ReactNotification, { store } from 'react-notifications-component';\nimport axios from 'axios';\n\nimport Notifications, { success, error } from 'react-notification-system-redux';\n/*\n                store.addNotification({\n                  title: 'Invalid Username or Password',\n                  message: 'Please Try Again',\n                  type: 'danger',\n                  // insert: \"top\",\n                  container: 'top-right',\n                  animationIn: ['animated', 'fadeIn'],\n                  animationOut: ['animated', 'fadeOut'],\n                  dismiss: {\n                    duration: 3000,\n                    pauseOnHover: true\n                  }\n                });\n                */\n\nconst notificationOpts = {\n  // uid: 'once-please', // you can specify your own uid if required\n  title: 'Error',\n  message: 'Invalid Username or Password',\n  position: 'tr',\n  autoDismiss: 2\n};\n\nexport const loginRequest = () => {\n  return {\n    type: LOGIN_REQUEST\n  };\n};\n\nexport const loginSuccess = (username) => {\n  return {\n    type: LOGIN_SUCCESS,\n    username: username\n  };\n};\n\nexport const loginFailure = (error) => {\n  return {\n    type: LOGIN_FAILURE,\n    error: error\n  };\n};\n\nexport const redirectToJoinPage = () => {\n  return {\n    type: REDIRECT_TO_JOIN\n  };\n};\n\nexport const logout = () => {\n  return {\n    type: LOGOUT\n  };\n};\n\nexport const login = (username, password) => {\n  console.log('loggin in...');\n  var reqData = {\n    username: username,\n    password: password\n  };\n  return function (dispatch) {\n    dispatch(loginRequest());\n    axios\n      .post(`${global.config.backendURL}/api/login`, reqData)\n      .then((res) => {\n        console.log(res.data);\n        localStorage.setItem('milaap-auth-token', res.data.token);\n        dispatch(loginSuccess(username));\n      })\n      .catch((err) => {\n        dispatch(loginFailure(err));\n        dispatch(Notifications.error(notificationOpts));\n      });\n  };\n};\n","import React from 'react';\nimport { Button, Input, Row, Col, Jumbotron } from 'reactstrap';\nimport Peer from 'peerjs';\nimport { Redirect } from 'react-router-dom';\nimport ReactNotification, { store } from 'react-notifications-component';\n\nclass PeerHandler extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      selfPeer: new Peer({\n        config: {\n          iceServers: [\n            { urls: 'stun:stun.l.google.com:19302' },\n            {\n              url: 'turn:numb.viagenie.ca',\n              credential: 'HWeF3pu@u2RfeYD',\n              username: 'veddandekar6@gmail.com'\n            }\n          ]\n        }\n      }),\n      remotePeers: new Array(),\n      remotePeersID: new Array(),\n      calls: new Array(),\n      inText: null,\n      context: null,\n      remoteStreams: [],\n      remoteStreamsRef: []\n    };\n  }\n\n  componentDidUpdate = () => {\n    const self = this;\n    self.state.remoteStreamsRef.map((ref, i) => {\n      ref.current.srcObject = self.state.remoteStreams[i];\n    });\n  };\n\n  test = () => {\n    console.log('test');\n  };\n\n  componentWillMount = () => {\n    const self = this;\n    this.state.selfPeer.on('open', function (id) {\n      self.setState({\n        myID: id\n      });\n    });\n\n    this.state.selfPeer.on('connection', function (conn) {\n      self.peerDiscoveryHandler(conn);\n    });\n\n    this.state.selfPeer.on('error', function (err) {\n      console.log('The following error occured: ', err);\n    });\n    this.state.selfPeer.on('call', function (call) {\n      call.answer();\n      call.on('error', (err) => console.log(err));\n      call.on('stream', function (stream) {\n        const ref = React.createRef();\n        self.setState({\n          remoteStreams: [...self.state.remoteStreams, stream],\n          remoteStreamsRef: [...self.state.remoteStreamsRef, ref]\n        });\n      });\n      self.setState({\n        calls: [...self.state.calls, call]\n      });\n    });\n  };\n\n  sharelink(id) {\n    // alert(id);\n    const link = document.querySelector('link[rel=canonical]')\n      ? document.querySelector('link[rel=canonical]').href\n      : document.location.href;\n    if (navigator.share) {\n      navigator\n        .share({\n          title: 'Join via Link',\n          url: link\n        })\n        .then(() => {\n          console.log('Link Shared!');\n        })\n        .catch(console.error);\n    } else {\n      navigator.clipboard\n        .writeText(link)\n        .then(() => {\n          store.addNotification({\n            title: 'Link copied',\n            message: 'Link copied to clipboard!',\n            type: 'success',\n            container: 'top-right',\n            animationIn: ['animated', 'fadeIn'],\n            animationOut: ['animated', 'fadeOut'],\n            dismiss: {\n              duration: 3000,\n              pauseOnHover: true\n            }\n          });\n        })\n        .catch(console.log('Sorry try again'));\n    }\n  }\n\n  switchContext = (e) => {\n    const context = document.getElementById('context');\n    context.srcObject = e.target.srcObject;\n    context.play();\n  };\n\n  shareVideo = () => {\n    const self = this;\n    if (self.state.selfVideoStream) {\n      const tracks = self.state.selfVideoStream.getTracks();\n      tracks.forEach(function (track) {\n        track.stop();\n      });\n      self.setState({\n        selfVideoStream: null\n      });\n      return;\n    }\n    navigator.mediaDevices\n      .getUserMedia({\n        video: { width: 1024, height: 576 },\n        audio: true\n      })\n      .then((media) => {\n        self.setState(\n          {\n            selfVideoStream: media,\n            calls: self.state.remotePeers.map((peer) => {\n              return self.state.selfPeer.call(peer.peer, media);\n            }),\n            sharedTo: self.state.remotePeers.map((peer) => {\n              return peer.peer;\n            })\n          },\n          () => {\n            self.state.calls.forEach((call) =>\n              call.on('error', (err) => console.log(err))\n            );\n            self.state.calls.forEach((call) =>\n              call.on('stream', function (stream) {\n                const ref = React.createRef();\n                self.setState({\n                  remoteStreams: [...self.state.remoteStreams, stream],\n                  remoteStreamsRef: [...self.state.remoteStreamsRef, ref]\n                });\n              })\n            );\n          }\n        );\n      });\n  };\n\n  shareScreen = () => {\n    const self = this;\n    if (self.state.selfScreenStream) {\n      const tracks = self.state.selfScreenStream.getTracks();\n      tracks.forEach(function (track) {\n        track.stop();\n      });\n      self.setState({\n        selfScreenStream: null\n      });\n      return;\n    }\n    navigator.mediaDevices\n      .getDisplayMedia({\n        video: { width: 1024, height: 576 },\n        audio: true\n      })\n      .then((media) => {\n        self.setState(\n          {\n            selfScreenStream: media,\n            calls: self.state.remotePeers.map((peer) => {\n              return self.state.selfPeer.call(peer.peer, media);\n            }),\n            sharedTo: self.state.remotePeers.map((peer) => {\n              return peer.peer;\n            })\n          },\n          () => {\n            self.state.calls.forEach((call) =>\n              call.on('error', (err) => console.log(err))\n            );\n            self.state.calls.forEach((call) =>\n              call.on('stream', function (stream) {\n                const ref = React.createRef();\n                self.setState({\n                  remoteStreams: [...self.state.remoteStreams, stream],\n                  remoteStreamsRef: [...self.state.remoteStreamsRef, ref]\n                });\n              })\n            );\n          }\n        );\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  peerDiscoveryHandler = (conn) => {\n    const self = this;\n    conn.on('open', () => {\n      conn.on('data', function (data) {\n        const share = !!(self.state.selfScreenStream || self.state.selfVideoStream);\n        const rcvdPeers = data.split(' ');\n        rcvdPeers.forEach((peer) => {\n          if (\n            peer != '' &&\n            !self.state.remotePeersID.includes(peer) &&\n            peer != self.state.myID\n          ) {\n            self.setState(\n              {\n                remotePeersID: [...self.state.remotePeersID, peer]\n              },\n              () => {\n                self.connectToPeer(peer);\n              }\n            );\n          }\n        });\n      });\n      conn.on('close', () => {\n        console.log('Connection closed gracefully');\n      });\n      if (self.state.remotePeers.length != 0) {\n        let myPeers = '';\n        self.state.remotePeers.forEach((peer) => {\n          myPeers += `${peer.peer} `;\n        });\n        conn.send(myPeers);\n      }\n      if (self.state.selfVideoStream || self.state.selfScreenStream) {\n        if (!self.state.sharedTo.includes(conn.peer)) {\n          self.setState({\n            calls: [\n              ...self.state.calls,\n              self.state.selfPeer.call(\n                conn.peer,\n                self.state.selfScreenStream || self.state.selfVideoStream\n              )\n            ], // Handle both later\n            sharedTo: [...self.state.sharedTo, conn.peer]\n          });\n        }\n      }\n    });\n    this.setState({\n      remotePeers: [...self.state.remotePeers, conn],\n      remotePeersID: [...self.state.remotePeersID, conn.peer]\n    });\n  };\n\n  connectToPeer = (peerID) => {\n    const self = this;\n    const conn = this.state.selfPeer.connect(peerID);\n    this.peerDiscoveryHandler(conn);\n  };\n\n  inputHandler = (e) => {\n    this.setState({\n      inText: e.target.value\n    });\n  };\n\n  render() {\n    const self = this;\n    return (\n      <div>\n        <h3>{this.state.myID}</h3>\n        <Row className=\"my-4 justify-content-center\">\n          <Col xs={4}>\n            <Input onChange={this.inputHandler} />\n          </Col>\n          <Col xs={2}>\n            <Button\n              color=\"secondary\"\n              onClick={() => self.connectToPeer(self.state.inText)}>\n              Invite\n            </Button>\n          </Col>\n        </Row>\n        <div className=\"mt-4 text-center\">\n          <Button className=\"m-4\" color=\"success\" onClick={this.shareScreen}>\n            {self.state.selfScreenStream ? 'Stop sharing screen' : 'Share screen'}\n          </Button>\n          <Button className=\"m-4\" color=\"info\" onClick={this.shareVideo}>\n            {self.state.selfVideoStream ? 'Stop sharing video' : 'Share video'}\n          </Button>\n\n          <Button\n            className=\"m-4\"\n            color=\"info\"\n            onClick={() => this.sharelink(self.state.myID)}>\n            Share link\n          </Button>\n        </div>\n        <br />\n        <video id=\"context\" autoPlay></video>\n        <Jumbotron>\n          <Row>\n            {self.state.remoteStreamsRef.map((ref) => {\n              return (\n                <Col key={ref} xs={4} md={3} lg={4}>\n                  <video\n                    ref={ref}\n                    onClick={self.switchContext}\n                    width=\"350\"\n                    height=\"200\"\n                    autoPlay\n                  />\n                </Col>\n              );\n            })}\n          </Row>\n        </Jumbotron>\n      </div>\n    );\n  }\n}\n\nexport default PeerHandler;\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 735;","import React from 'react';\n\nconst Breadcrumbs = React.lazy(() => import('./views/Base/Breadcrumbs'));\nconst Cards = React.lazy(() => import('./views/Base/Cards'));\nconst Carousels = React.lazy(() => import('./views/Base/Carousels'));\nconst Collapses = React.lazy(() => import('./views/Base/Collapses'));\nconst Dropdowns = React.lazy(() => import('./views/Base/Dropdowns'));\nconst Forms = React.lazy(() => import('./views/Base/Forms'));\nconst Jumbotrons = React.lazy(() => import('./views/Base/Jumbotrons'));\nconst ListGroups = React.lazy(() => import('./views/Base/ListGroups'));\nconst Navbars = React.lazy(() => import('./views/Base/Navbars'));\nconst Navs = React.lazy(() => import('./views/Base/Navs'));\nconst Paginations = React.lazy(() => import('./views/Base/Paginations'));\nconst Popovers = React.lazy(() => import('./views/Base/Popovers'));\nconst ProgressBar = React.lazy(() => import('./views/Base/ProgressBar'));\nconst Switches = React.lazy(() => import('./views/Base/Switches'));\nconst Tables = React.lazy(() => import('./views/Base/Tables'));\nconst Tabs = React.lazy(() => import('./views/Base/Tabs'));\nconst Tooltips = React.lazy(() => import('./views/Base/Tooltips'));\nconst BrandButtons = React.lazy(() => import('./views/Buttons/BrandButtons'));\nconst ButtonDropdowns = React.lazy(() => import('./views/Buttons/ButtonDropdowns'));\nconst ButtonGroups = React.lazy(() => import('./views/Buttons/ButtonGroups'));\nconst Buttons = React.lazy(() => import('./views/Buttons/Buttons'));\nconst Charts = React.lazy(() => import('./views/Charts'));\nconst Dashboard = React.lazy(() => import('./views/Dashboard'));\nconst CoreUIIcons = React.lazy(() => import('./views/Icons/CoreUIIcons'));\nconst Flags = React.lazy(() => import('./views/Icons/Flags'));\nconst FontAwesome = React.lazy(() => import('./views/Icons/FontAwesome'));\nconst SimpleLineIcons = React.lazy(() => import('./views/Icons/SimpleLineIcons'));\nconst Alerts = React.lazy(() => import('./views/Notifications/Alerts'));\nconst Badges = React.lazy(() => import('./views/Notifications/Badges'));\nconst Modals = React.lazy(() => import('./views/Notifications/Modals'));\nconst Colors = React.lazy(() => import('./views/Theme/Colors'));\nconst Typography = React.lazy(() => import('./views/Theme/Typography'));\nconst Widgets = React.lazy(() => import('./views/Widgets/Widgets'));\nconst Users = React.lazy(() => import('./views/Users/Users'));\nconst User = React.lazy(() => import('./views/Users/User'));\nconst Room = React.lazy(() => import('./views/Rooms/Rooms'));\n// const Rooms = import('./views/Rooms/Rooms');\n\n// https://github.com/ReactTraining/react-router/tree/master/packages/react-router-config\nconst routes = [\n  { path: '/', exact: true, name: 'Home' },\n  { path: '/dashboard', name: 'Dashboard', component: Dashboard },\n  { path: '/theme', exact: true, name: 'Theme', component: Colors },\n  { path: '/theme/colors', name: 'Colors', component: Colors },\n  { path: '/theme/typography', name: 'Typography', component: Typography },\n  { path: '/base', exact: true, name: 'Base', component: Cards },\n  { path: '/base/cards', name: 'Cards', component: Cards },\n  { path: '/base/forms', name: 'Forms', component: Forms },\n  { path: '/base/switches', name: 'Switches', component: Switches },\n  { path: '/base/tables', name: 'Tables', component: Tables },\n  { path: '/base/tabs', name: 'Tabs', component: Tabs },\n  { path: '/base/breadcrumbs', name: 'Breadcrumbs', component: Breadcrumbs },\n  { path: '/base/carousels', name: 'Carousel', component: Carousels },\n  { path: '/base/collapses', name: 'Collapse', component: Collapses },\n  { path: '/base/dropdowns', name: 'Dropdowns', component: Dropdowns },\n  { path: '/base/jumbotrons', name: 'Jumbotrons', component: Jumbotrons },\n  { path: '/base/list-groups', name: 'List Groups', component: ListGroups },\n  { path: '/base/navbars', name: 'Navbars', component: Navbars },\n  { path: '/base/navs', name: 'Navs', component: Navs },\n  { path: '/base/paginations', name: 'Paginations', component: Paginations },\n  { path: '/base/popovers', name: 'Popovers', component: Popovers },\n  { path: '/base/progress-bar', name: 'Progress Bar', component: ProgressBar },\n  { path: '/base/tooltips', name: 'Tooltips', component: Tooltips },\n  { path: '/buttons', exact: true, name: 'Buttons', component: Buttons },\n  { path: '/buttons/buttons', name: 'Buttons', component: Buttons },\n  {\n    path: '/buttons/button-dropdowns',\n    name: 'Button Dropdowns',\n    component: ButtonDropdowns\n  },\n  {\n    path: '/buttons/button-groups',\n    name: 'Button Groups',\n    component: ButtonGroups\n  },\n  {\n    path: '/buttons/brand-buttons',\n    name: 'Brand Buttons',\n    component: BrandButtons\n  },\n  { path: '/icons', exact: true, name: 'Icons', component: CoreUIIcons },\n  { path: '/icons/coreui-icons', name: 'CoreUI Icons', component: CoreUIIcons },\n  { path: '/icons/flags', name: 'Flags', component: Flags },\n  { path: '/icons/font-awesome', name: 'Font Awesome', component: FontAwesome },\n  {\n    path: '/icons/simple-line-icons',\n    name: 'Simple Line Icons',\n    component: SimpleLineIcons\n  },\n  {\n    path: '/notifications',\n    exact: true,\n    name: 'Notifications',\n    component: Alerts\n  },\n  { path: '/notifications/alerts', name: 'Alerts', component: Alerts },\n  { path: '/notifications/badges', name: 'Badges', component: Badges },\n  { path: '/notifications/modals', name: 'Modals', component: Modals },\n  { path: '/widgets', name: 'Widgets', component: Widgets },\n  { path: '/charts', name: 'Charts', component: Charts },\n  { path: '/users', exact: true, name: 'Users', component: Users },\n  { path: '/users/:id', exact: true, name: 'User Details', component: User },\n  { path: '/rooms/:roomname', exact: true, name: 'Room', component: Room }\n];\n\nexport default routes;\n","import React, { Component, Suspense } from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport * as router from 'react-router-dom';\nimport { Container } from 'reactstrap';\nimport axios from 'axios';\nimport socketIOClient from 'socket.io-client';\nimport PeerHandler from './peerHandler';\nimport { connect } from 'react-redux';\nimport ReactNotification, { store } from 'react-notifications-component';\nimport * as actions from '../../redux/loginRedux/loginAction';\nimport './DefaultLayout.css';\nimport {\n  AppAside,\n  AppFooter,\n  AppHeader,\n  AppSidebar,\n  AppSidebarFooter,\n  AppSidebarForm,\n  AppSidebarHeader,\n  AppSidebarMinimizer,\n  AppAsideToggler,\n  AppBreadcrumb2 as AppBreadcrumb,\n  AppSidebarNav2 as AppSidebarNav\n} from '@coreui/react';\nimport routes from '../../routes';\n\nconst socket = socketIOClient(`${global.config.backendURL}/`);\nconst DefaultAside = React.lazy(() => import('./DefaultAside'));\nconst DefaultFooter = React.lazy(() => import('./DefaultFooter'));\nconst DefaultHeader = React.lazy(() => import('./DefaultHeader'));\nconst InnerHeader = React.lazy(() => import('./InnerHeader'));\nfunction getGroupElements(rooms) {\n  const groupElements = [];\n  if (rooms === undefined) {\n    return {};\n  }\n  rooms.forEach((item, index) => {\n    const groupElem = {};\n    groupElem.name = item;\n    groupElem.url = '/rooms/' + item;\n    groupElem.icon = 'icon-screen-desktop';\n    groupElem.state = true;\n    groupElements.push(groupElem);\n  });\n  return groupElements;\n}\n\nfunction getFriendList(active) {\n  const activeUsers = [];\n  if (active === undefined) {\n    return {};\n  }\n  active.forEach((item, index) => {\n    const friend = {};\n    friend.name = item;\n    // groupElem.url = '/rooms/' + item;\n    friend.icon = 'icon-user';\n    friend.state = false;\n    activeUsers.push(friend);\n  });\n  return activeUsers;\n}\n\nclass DefaultLayout extends Component {\n  getRooms = async () => {\n    const token = localStorage.getItem('milaap-auth-token');\n    const reqHeader = { 'milaap-auth-token': token };\n    await axios\n      .post(\n        `${global.config.backendURL}/api/user/getrooms`,\n        {},\n        {\n          headers: reqHeader\n        }\n      )\n      .then((res) => {\n        if (res.status === 201) {\n          this.setState({\n            navigation: {\n              items: [\n                {\n                  title: true,\n                  name: 'Rooms',\n                  icon: 'icon-puzzle'\n                },\n                {\n                  icon: 'icon-user',\n                  name: 'Login To View Rooms',\n                  url: '/login'\n                }\n              ]\n            }\n          });\n          return;\n        }\n        console.log(res);\n        var rooms = res.data.rooms;\n        this.setState({ rooms: rooms });\n        const PMList = {};\n        const GroupList = getGroupElements(rooms);\n        axios\n          .post(\n            `${global.config.backendURL}/api/room/getActive`,\n            {},\n            {\n              headers: {\n                'milaap-auth-token': localStorage.getItem('milaap-auth-token')\n              }\n            }\n          )\n          .then((res) => {\n            console.log(res);\n            var active = res.data.active;\n            console.log(active);\n            const FriendList = getFriendList(active);\n            console.log({ ...GroupList });\n            this.setState({\n              navigation: {\n                items: [\n                  {\n                    title: true,\n                    name: 'Friends',\n                    icon: 'icon-puzzle'\n                  },\n                  ...FriendList,\n                  {\n                    title: true,\n                    name: 'Rooms',\n                    icon: 'icon-puzzle',\n                    children: [\n                      {\n                        // title: true,\n                        name: 'No Messages Yet.',\n                        icon: 'icon-puzzle',\n                        badge: {\n                          variant: 'info',\n                          text: 'Add'\n                        },\n                        class: ''\n                      }\n                    ]\n                  },\n                  ...GroupList\n                ]\n              }\n            });\n          })\n          .catch((err) => {\n            console.log(err);\n          });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  constructor(props) {\n    super(props);\n    var rooms;\n    var friends;\n    const FriendList = getFriendList(friends);\n    const GroupList = getGroupElements(rooms);\n    this.state = {\n      rooms: [],\n      userToken: localStorage.getItem('milaap-auth-token'),\n      navigation: {\n        items: [\n          {\n            title: true,\n            name: 'Friends',\n            icon: 'icon-puzzle'\n          },\n          FriendList,\n          {\n            title: true,\n            name: 'Rooms',\n            icon: 'icon-puzzle',\n            children: [\n              {\n                // title: true,\n                name: 'No Messages Yet.',\n                icon: 'icon-puzzle',\n                badge: {\n                  variant: 'info',\n                  text: 'Add'\n                },\n                class: ''\n              }\n            ]\n          },\n          GroupList\n        ]\n      }\n    };\n    if (this.state.userToken === null) {\n      return;\n    }\n    this.getRooms();\n    this.state = {\n      navigation: {\n        items: [\n          {\n            title: true,\n            name: 'Friends',\n            icon: 'icon-puzzle'\n          },\n          FriendList,\n          {\n            title: true,\n            name: 'Rooms',\n            icon: 'icon-puzzle',\n            children: [\n              {\n                // title: true,\n                name: 'No Messages Yet.',\n                icon: 'icon-puzzle',\n                badge: {\n                  variant: 'info',\n                  text: 'Add'\n                },\n                class: ''\n              }\n            ]\n          },\n          GroupList\n        ]\n      }\n    };\n    socket.on('newRoom', (data) => {\n      console.log('ROOM ADDED');\n      console.log(data);\n      this.getRooms();\n    });\n  }\n\n  loading = () => <div className=\"animated fadeIn pt-1 text-center\">Loading...</div>;\n\n  signOut(e) {\n    e.preventDefault();\n    this.props.logout();\n    localStorage.removeItem('milaap-auth-token');\n    this.props.history.push('/login');\n  }\n\n  componentDidMount() {\n    if (this.props.location.state !== undefined) {\n      store.addNotification({\n        title: `Hi ${this.props.location.state}`,\n        message: 'Welcome to Dashboard',\n        type: 'success',\n        // insert: \"top\",\n        container: 'top-right',\n        animationIn: ['animated', 'fadeIn'],\n        animationOut: ['animated', 'fadeOut'],\n        dismiss: {\n          duration: 3000,\n          pauseOnHover: true\n        }\n      });\n    }\n  }\n\n  render() {\n    if (localStorage.getItem('milaap-auth-token') === null) {\n      if (this.props.location.pathname.match('/rooms/')) {\n        var room = this.props.location.pathname.split('/')[2];\n        return <Redirect to={{ pathname: '/join', room: room }} />;\n      }\n      return <Redirect to={{ pathname: '/login' }} />;\n    }\n    console.log(this.props);\n    return (\n      <React.Fragment>\n        <div className=\"app\">\n          <AppHeader className=\"navbar navbar-dark bg-dark\" fixed>\n            <Suspense fallback={this.loading()}>\n              <DefaultHeader onLogout={(e) => this.signOut(e)} />\n            </Suspense>\n          </AppHeader>\n          <div className=\"app-body\">\n            <ReactNotification />\n            <AppSidebar fixed display=\"lg\">\n              <AppSidebarHeader />\n              <AppSidebarForm />\n              <Suspense>\n                <AppSidebarNav\n                  navConfig={this.state.navigation}\n                  {...this.props}\n                  router={router}\n                />\n              </Suspense>\n              <AppSidebarFooter />\n              <AppSidebarMinimizer />\n            </AppSidebar>\n            <Container fluid id=\"main-container\">\n              <Suspense fallback={this.loading()}>\n                <Switch>\n                  {routes.map((route, idx) => {\n                    return route.component ? (\n                      <Route\n                        key={idx}\n                        path={route.path}\n                        exact={route.exact}\n                        name={route.name}\n                        render={(props) => <route.component {...props} />}\n                      />\n                    ) : null;\n                  })}\n                  <Redirect from=\"/\" to=\"/dashboard\" />\n                </Switch>\n              </Suspense>\n            </Container>\n            {/*\n            <Suspense fallback={this.loading()}>\n              <aside className=\"aside-menu bg-dark\" display=\"md\">\n                <DefaultAside />\n              </aside>\n            </Suspense>\n            */}\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\nconst mapStateToProps = (state) => {\n  return {};\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    logout: () => dispatch(actions.logout())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DefaultLayout);\n"],"sourceRoot":""}